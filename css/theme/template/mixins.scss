@mixin vertical-gradient( $top, $bottom ) {
	background: $top;
	background: -moz-linear-gradient( top, $top 0%, $bottom 100% );
	background: -webkit-gradient( linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom) );
	background: -webkit-linear-gradient( top, $top 0%, $bottom 100% );
	background: -o-linear-gradient( top, $top 0%, $bottom 100% );
	background: -ms-linear-gradient( top, $top 0%, $bottom 100% );
	background: linear-gradient( top, $top 0%, $bottom 100% );
}

@mixin horizontal-gradient( $top, $bottom ) {
	background: $top;
	background: -moz-linear-gradient( left, $top 0%, $bottom 100% );
	background: -webkit-gradient( linear, left top, right top, color-stop(0%,$top), color-stop(100%,$bottom) );
	background: -webkit-linear-gradient( left, $top 0%, $bottom 100% );
	background: -o-linear-gradient( left, $top 0%, $bottom 100% );
	background: -ms-linear-gradient( left, $top 0%, $bottom 100% );
	background: linear-gradient( left, $top 0%, $bottom 100% );
}

@mixin radial-gradient( $outer, $inner, $type: circle ) {
	background: $outer;
	background: -moz-radial-gradient( center, $type cover,  $inner 0%, $outer 100% );
	background: -webkit-gradient( radial, center center, 0px, center center, 100%, color-stop(0%,$inner), color-stop(100%,$outer) );
	background: -webkit-radial-gradient( center, $type cover,  $inner 0%, $outer 100% );
	background: -o-radial-gradient( center, $type cover,  $inner 0%, $outer 100% );
	background: -ms-radial-gradient( center, $type cover,  $inner 0%, $outer 100% );
	background: radial-gradient( center, $type cover,  $inner 0%, $outer 100% );
}

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}
